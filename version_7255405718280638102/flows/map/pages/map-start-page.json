{
 "pageModelVersion": "19.3.1",
 "title": "",
 "description": "",
 "variables": {
  "mapprovider": {
			"type": "any"
		},
  "dataProvider": {
   "type": "vb/ArrayDataProvider",
   "defaultValue": {
    "itemType": "state_sizes",
    "idAttribute": "cartodb_id"
   }
  },
        "getOrdersbycountryListSDP": {
            "type": "vb/ServiceDataProvider",
            "defaultValue": {
                "endpoint": "salesByCountry/getOrdersbycountry",
                "idAttribute": "total",
                "itemsPath": "items",
                "responseType": "page:getOrdersbycountryResponse"
            }
        },
        "getYrsalesListSDP": {
            "type": "vb/ServiceDataProvider",
            "defaultValue": {
                "endpoint": "yearlySales/getYrsales",
                "idAttribute": "id",
                "itemsPath": "items",
                "responseType": "page:getYrsalesResponse"
            }
        }
 },
 "metadata": {},
 "types": {
        "state_sizes": {
            "color": "string",
            "cartodb_id": "string",
            "size": "number"
        },
        "getOrdersbycountryResponse": {
            "items": [
                {
                    "country": "string",
                    "total": "number"
                }
            ]
        },
        "@decorators.getOrdersbycountryResponse": {
            "endpoint": "getOrdersbycountry",
            "service": "salesByCountry",
            "path": "response"
        },
        "getYrsalesResponse": {
            "items": [
                {
                    "country": "string",
                    "id": "number",
                    "total": "number",
                    "year": "number"
                }
            ]
        },
        "@decorators.getYrsalesResponse": {
            "endpoint": "getYrsales",
            "service": "yearlySales",
            "path": "response"
        }
 },
 "chains": {
  "loadMapDataAC": {
   "root": "callLoadMapFN",
   "description": "",
   "actions": {
    "callLoadMapFN": {
     "module": "vb/action/builtin/callModuleFunctionAction",
     "parameters": {
      "module": "[[ $page.functions ]]",
      "functionName": "loadMap"
     },
     "outcomes": {
						"success": "assignVariables1"
					}
    },
    "assignVariables1": {
     "module": "vb/action/builtin/assignVariablesAction",
     "parameters": {
						"$page.variables.mapprovider": {
							"source": "{{ $chain.results.callLoadMapFN }}"
						}
					},
     "outcomes": {
      "success": "callDataProvider"
     }
    },
    "assignVariables2": {
     "module": "vb/action/builtin/assignVariablesAction",
     "parameters": {
      "$page.variables.dataProvider": {
       "source": {
        "data": "{{ $chain.results.callDataProvider }}"
       },
       "reset": "none",
       "auto": "always"
      }
     },
     "outcomes": {
      "success": "callModuleFunction1"
     }
    },
    "callModuleFunction1": {
     "module": "vb/action/builtin/callModuleFunctionAction",
     "parameters": {
      "module": "[[ $page.functions ]]",
      "functionName": "console",
      "params": [
       "{{ $page.variables.dataProvider }}"
      ]
     }
    },
                "callDataProvider": {
                    "module": "vb/action/builtin/callModuleFunctionAction",
                    "parameters": {
                        "module": "[[ $page.functions ]]",
                        "functionName": "dataProvider",
                        "params": [
                            "{{ $page.variables.mapprovider }}"
                        ]
                    },
                    "outcomes": {
                        "success": "assignVariables2"
                    }
                }
   }
  },
  "SwitcherValueChangeChain": {
			"description": "",
			"variables": {
				"value": {
					"required": true,
					"type": "any",
					"input": "fromCaller"
				}
			},
			"root": "callModuleFunction1",
			"actions": {
				"callModuleFunction1": {
					"module": "vb/action/builtin/callModuleFunctionAction",
					"parameters": {
						"module": "[[ $page.functions ]]",
						"functionName": "console",
						"params": [
							"{{ $chain.variables.value }}"
						]
					},
					"outcomes": {
						"success": "callModuleFunction2"
					}
				},
				"callModuleFunction2": {
					"module": "vb/action/builtin/callModuleFunctionAction",
					"parameters": {
						"module": "[[ $page.functions ]]",
						"functionName": "console",
						"params": [
							"{{ $page.variables.dataProvider }}"
						]
					},
					"outcomes": {
						"success": "callModuleFunction3"
					}
				},
				"callModuleFunction3": {
					"module": "vb/action/builtin/callModuleFunctionAction",
					"parameters": {
						"module": "[[ $page.functions ]]",
						"functionName": "console",
						"params": [
							"{{ $page.variables.world_colors_adp }}"
						]
					}
				}
			}
		},
  "loadWorldMap": {
			"root": "callLoadMapFNWorld",
			"description": "",
			"actions": {
				"callLoadMapFNWorld": {
					"module": "vb/action/builtin/callModuleFunctionAction",
					"parameters": {
						"module": "[[ $page.functions ]]",
						"functionName": "loadMapCAFN"
					},
					"outcomes": {
						"success": "assignWorldMapProvider"
					}
				},
				"assignWorldMapProvider": {
					"module": "vb/action/builtin/assignVariablesAction",
					"parameters": {
						"$page.variables.caMapProvider": {
							"source": "{{ $chain.results.callLoadMapFNWorld }}"
						}
					},
					"outcomes": {
						"success": "getWorldColorsFromRest"
					}
				},
				"assignVariables1": {
					"module": "vb/action/builtin/assignVariablesAction",
					"parameters": {
						"$page.variables.world_colors_adp": {
							"source": {
								"data": "{{ $chain.results.getWorldColorsFromRest.body.items }}"
							},
							"reset": "none",
							"auto": "always"
						}
					},
					"outcomes": {
						"success": "printWorldColors"
					}
				},
				"getWorldColorsFromRest": {
					"module": "vb/action/builtin/restAction",
					"parameters": {
						"endpoint": "worldColors/getWorldcolors"
					},
					"outcomes": {
						"success": "assignVariables1"
					}
				},
				"printWorldColors": {
					"module": "vb/action/builtin/callModuleFunctionAction",
					"parameters": {
						"module": "[[ $page.functions ]]",
						"functionName": "console",
						"params": [
							"{{ $page.variables.world_colors_adp }}"
						]
					},
					"outcomes": {
						"success": "callModuleFunction1"
					}
				},
				"callModuleFunction1": {
					"module": "vb/action/builtin/callModuleFunctionAction",
					"parameters": {
						"module": "[[ $page.functions ]]",
						"functionName": "console",
						"params": [
							"{{ $page.variables.caMapProvider }}"
						]
					}
				}
			}
		},
  "ThematicMapHoverRendererChangeChain": {
			"description": "",
			"variables": {
				"hoverRenderer": {
					"required": true,
					"type": "any",
					"input": "fromCaller"
				}
			},
			"root": "callModuleFunction1",
			"actions": {
				"callModuleFunction1": {
					"module": "vb/action/builtin/callModuleFunctionAction",
					"parameters": {
						"module": "[[ $page.functions ]]",
						"functionName": "console",
						"params": [
							"{{ $chain.variables.hoverRenderer }}"
						]
					}
				}
			}
		}
 },
 "eventListeners": {
  "vbEnter": {
   "chains": [
    {
					"chainId": "loadMapDataAC",
					"parameters": {}
				}
   ]
  }
 },
 "imports": {
  "components": {
   "oj-thematic-map": {
    "path": "ojs/ojthematicmap"
   },
   "oj-legend": {
				"path": "ojs/ojlegend"
			},
   "boot-box": {
				"path": "boot-box/loader"
			},
   "oj-thematic-map-marker": {
    "path": "ojs/ojthematicmap"
   },
            "oj-chart": {
                "path": "ojs/ojchart"
            },
            "oj-chart-item": {
                "path": "ojs/ojchart"
            }
  }
 }
}